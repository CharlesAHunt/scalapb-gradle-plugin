plugins {
    id 'scala'
    id 'idea'
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '0.9.7'
    id "com.jfrog.bintray" version "1.7.3"

    // Publishing to Artifactory
    id 'com.jfrog.artifactory' version '4.4.18'
    id 'maven-publish'
}

group 'com.charlesahunt'
version = '1.0.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'java-gradle-plugin'
apply plugin: 'com.jfrog.bintray'
apply plugin: "com.gradle.plugin-publish"

repositories {
    jcenter()
    mavenCentral()
}

task wrapper(type: Wrapper) {
    gradleVersion = "4.2"
}

dependencies {
    compile gradleApi()
    compile 'org.scala-lang:scala-library:2.12.3'
    compile 'org.scala-sbt:io_2.12:1.1.0'
    compile 'com.trueaccord.scalapb:compilerplugin_2.12:0.6.5'
    compile 'com.typesafe.scala-logging:scala-logging_2.12:3.7.2'
    zinc 'com.typesafe.zinc:zinc:0.3.13'
    compile 'com.google.protobuf:protobuf-java:3.4.0'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile gradleTestKit()
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives sourcesJar
}

gradlePlugin {
    plugins {
        scalapbPlugin {
            id = 'scalapb'
            implementationClass = 'com.charlesahunt.scalapb.ScalaPBPlugin'
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    configurations = ['archives']
    publish = true
    pkg {
        repo = 'maven'
        name = 'gradle-scalapb'
        desc = 'Gradle plugin that can run scalapb as a part of your build.'
        licenses = ['MIT']
        vcsUrl = 'git@github.com:CharlesAHunt/scalapb-gradle-plugin.git'
        websiteUrl = 'https://github.com/CharlesAHunt/scalapb-gradle-plugin'
        issueTrackerUrl = 'https://github.com/CharlesAHunt/scalapb-gradle-plugin/issues'
        labels = ['scala', 'scalapb', 'protobuf', 'proto']
        version {
            name = project.version
            vcsTag = project.version
        }
    }
}

project.ext.set('gradle.publish.key', System.getenv('GRADLE_PORTAL_KEY'))
project.ext.set('gradle.publish.secret', System.getenv('GRADLE_PORTAL_SECRET'))

pluginBundle {
    website = 'https://github.com/CharlesAHunt/scalapb-gradle-plugin'
    vcsUrl = 'git@github.com:CharlesAHunt/scalapb-gradle-plugin.git'
    tags = ['scala', 'scalapb', 'proto', 'protobuf']
    
    plugins {
        scalapbPlugin {
            id = 'scalapb'
            displayName = 'Gradle ScalaPB Plugin'
            description = 'TODO'
        }
    }
}


// Publishing to Artifactory
// -------------------------

// Configuration for com.jfrog.artifactory
artifactory {
    contextUrl = "http://devops.acmeindustries.com/artifactory"
    publish {
        repository {
            repoKey     = 'plugins-release'
            username    = 'todot'    // Note: Please do not actually store credentials in the build.gradle file
            password    = 'todo'     // Inject them as environment variables or via your user Gradle properties
            maven       = true
        }
        defaults{
            publications("pluginPublication")    // Publication defined below
        }
    }
}

// Plugin publication
publishing {
    publications {
        pluginPublication (MavenPublication) {
            from        components.java
            groupId     project.group
            artifactId  project.name
            version     project.version
        }
    }
}